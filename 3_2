#include <stdio.h>
#include <stdlib.h>
#include <dirent.h>
#include <sys/stat.h>
#include <string.h>

int main(int argc, char *argv[]) {
    // Verificar el número correcto de argumentos
    if (argc != 4) {
        fprintf(stderr, "Uso: %s <directorio> <tamaño_min> <tamaño_max>\n", argv[0]);
        return 1;
    }

    const char *directorio = argv[1];
    long tamaño_min = atol(argv[2]);
    long tamaño_max = atol(argv[3]);

    // Abrir el directorio
    DIR *dir = opendir(directorio);
    if (dir == NULL) {
        perror("Error al abrir el directorio");
        return 1;
    }

    struct dirent *entrada;
    struct stat info_archivo;
    char ruta_completa[4096];

    // Leer entradas en el directorio
    while ((entrada = readdir(dir)) != NULL) {
        // Ignorar directorios '.' y '..'
        if (strcmp(entrada->d_name, ".") == 0 || strcmp(entrada->d_name, "..") == 0) {
            continue;
        }

        // Construir la ruta completa del archivo
        snprintf(ruta_completa, sizeof(ruta_completa), "%s/%s", directorio, entrada->d_name);

        // Obtener información del archivo
        if (stat(ruta_completa, &info_archivo) == -1) {
            perror("Error al obtener información del archivo");
            continue;
        }

        // Verificar si el tamaño del archivo está en el rango especificado
        if ((info_archivo.st_mode & S_IFMT) == S_IFREG) { // Verificar si es un archivo regular
            if (info_archivo.st_size >= tamaño_min && info_archivo.st_size <= tamaño_max) {
                printf("Archivo: %s (Tamaño: %ld bytes)\n", ruta_completa, info_archivo.st_size);
            }
        }
    }

    closedir(dir);
    return 0;
}
